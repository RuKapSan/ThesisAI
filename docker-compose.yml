services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: thesisai
      POSTGRES_PASSWORD: thesisai_password
      POSTGRES_DB: thesisai
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thesisai"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_URL: "postgresql://thesisai:thesisai_password@postgres:5432/thesisai"
      REDIS_URL: "redis://redis:6379"
      NODE_ENV: production
      JWT_SECRET: "your-secret-key-here"
      JWT_EXPIRE: "7d"
      OPENAI_API_KEY: "your-openai-api-key-here"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3001:3001"
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: "http://backend:3001/api"
    depends_on:
      - backend
    ports:
      - "3000:3000"

volumes:
  postgres_data: